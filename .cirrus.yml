container:
  image: nixos/nix

environment:
  # Save some traffic by excluding the full git history
  CIRRUS_CLONE_DEPTH: 1

task:
  matrix:
    - name: vm_test
      container:
        kvm: true
      environment:
        channel: nixpkgs
        checkKVM: 1
      matrix:
        - environment:
            scenario: default
        # - environment:
        #     scenario: netns

    # - name: build_unstable_pkgs
    #   environment:
    #     channel: nixpkgs-unstable
    #     checkKVM: 1

  setup_nix_script:
    - |
      if [[ $checkKVM && ! -e /dev/kvm ]]; then
        >&2 echo "No KVM available on VM Host."
        exit 1
      fi
    - export NIX_PATH="nixpkgs=$(nix eval --raw -f pkgs/nixpkgs-pinned.nix $channel)"
    - nix-env --quiet -iA cachix -f https://cachix.org/api/v1/install
    - cachix use nix-bitcoin

  build_script:
    - echo "$NIX_PATH ($(nix eval --raw nixpkgs.lib.version))"
    - |
      getBuildExpr() {
          if [[ $TestModules ]]; then
              test/run-tests.sh --scenario $scenario exprForCI
          else
              echo "(import ./. {}).$PKG"
          fi
      }
    - buildExpr=$(getBuildExpr)
    - time nix-instantiate -E "$buildExpr" --add-root ./drv --indirect
    - outPath=$(nix-store --query ./drv)
    - |
      if nix path-info --store https://nix-bitcoin.cachix.org $outPath &>/dev/null; then
        echo "$outPath" has already been built successfully.
        travis_terminate 0
      fi
      # Travis doesn't expose secrets to pull-request builds,
      # so skip cache uploading in this case
    - |
      if [[ $CACHIX_SIGNING_KEY ]]; then
        cachix push nix-bitcoin --watch-store &
        cachixPid=$!
      fi
    - nix-build ./drv
    - |
      if [[ $CACHIX_SIGNING_KEY ]]; then
        # Wait until cachix has finished uploading
        # Run as root because yama/ptrace_scope != 0
        ruby=$(nix-build '<nixpkgs>' -A ruby)/bin/ruby
        time sudo $ruby helper/wait-for-network-idle.rb $cachixPid
      fi
